# List IPs:
sudo iptables -L INPUT -n --line-numbers

# Adding IP to block:
sudo iptables -A INPUT -s x.x.x.x -j DROP
sudo iptables -A OUTPUT -d x.x.x.x -j DROP

#Removing IP from user configurations:
sudo iptables -D INPUT [number on side]

#Removing all iptable configuations:
sudo iptables -F

#Blocking ipv4 addresses:
sudo iptables -A INPUT -s x.x.x.x -j DROP
sudo iptables -A OUTPUT -s x.x.x.x -j DROP


#Blacklisting all IP addresses:
sudo iptables -P INPUT DROP
sudo iptables -P OUTPUT DROP

#Whitelisting all IP addresses:
sudo iptables -P OUTPUT Accept
sudo iptables -P INPUT DROP

#Saving configuations to kernel:
sudo iptables-save

#Blocking all traffic coming into port with exeptions of whitelisted ip:
sudo iptables -A INPUT -p tcp --dport 8000 -s 1.2.3.4 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 8000 -j DROP

  another option for this same system ^:
  sudo iptables -A INPUT -p tcp --dport 8000 -s ! 1.2.3.4 -j DROP
  
#Swapping out configuation files and saving iptables configuations:
  Saving iptables configuation:
  sudo iptables-save > myfile
  
  Loading iptables configuation:
  sudo iptables-load < myfile 
  
# Blocking all ports with exeptions to ssh script (port 22) and http (port 80)



#Open port (in example ssh or port 22) to only one IP:
sudo iptables -A INPUT -p tcp --dport 22 -s YourIP -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 22 -j DROP





#!/bin/bash
IPTABLES=/sbin/iptables

#start and flush
$IPTABLES -F
$IPTABLES -t nat -Fabout:preferences#sync
$IPTABLES -X
$IPTABLES -P FORWARD DROP
$IPTABLES -P INPUT   DROP
$IPTABLES -P OUTPUT  ACCEPT

#SSH traffic
$IPTABLES -A INPUT -p tcp --dport 22 -j ACCEPT
#HTTP traffic
$IPTABLES -A INPUT -p tcp --dport 80 -j ACCEPT

#loopback
iptables -A INPUT -i lo -p all -j ACCEPT
 
 
 
 
  ##Note: Could use whiptail? https://en.wikibooks.org/wiki/Bash_Shell_Scripting/Whiptail
  ##Note: YES! So using this! (I hope to at least, that may change)
Script for whip tails (once again, type this all out incase of hidden characters):
What to do with whip tails:
Dialogue that explains how to use whiptail (i.e. press enter to go back, press space to configure options etc.
"Save Changes?" Dialogue

#!/bin/bash
  
whiptail --title "Example Dialog" --msgbox "Welcome to Sleepy Port! Press SPACEBAR to click highlighted text, press left to higlight main buttons, press right to highlight bottom of screen buttons, and press ENTER to escape from the session." 8 78

whiptail --title "Menu example" --menu "Choose an option" 25 78 16 \
"<-- Back" "Return to the main menu." \
"Add User" "Add a user to the system." \
"Modify User" "Modify an existing user." \
"List Users" "List all users on the system." \
"Add Group" "Add a user group to the system." \
"Modify Group" "Modify a group and its list of members." \
"List Groups" "List all groups on the system."

#This runs a very basic version of what will happen (this has been hand written, this is okay):
#!/bin/bash(

##trap '' 2 this is used so users cannot use ctrl+c to escape
 while true
 do
 echo "======================="
 echo "Menu ----"
 echo "======================="
 echo "Enter 1 to list users 1: "
 echo "Enter 2 to show calendar 2:"
 echo -e "\n"
 echo -e "Enter your selection \c"
 read answer
 case "$answer" in
   1) who
      uptime ;;

   2) cal ;;
   q) exit ;;
 esac
 echo -e "Enter return to continue \c"
 read input
done
 
 
 
 
 
  ##Note: Remember to write this all out by hand, just in case of hidden characters.
  
 

